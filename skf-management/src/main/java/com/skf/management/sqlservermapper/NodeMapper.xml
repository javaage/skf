<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skf.management.sqlservermapper.NodeMapper">

	<resultMap id="BaseResultMap" type="com.skf.management.model.NodeElement">
		<result column="treeString" jdbcType="VARCHAR" property="treeString" />
		<result column="bottomId" jdbcType="INTEGER" property="bottomId" />
	</resultMap>
	
	<select id="getLeafNodes" parameterType="map" resultType="Integer">
		SELECT 
		distinct IDNode FROM ${schema}.dbo.Node where IDNode not in (SELECT 
		distinct IDParent FROM ${schema}.dbo.Node)
	</select>

	<select id="getDatabases" resultType="String">
		select name from
		 sys.databases where name not in ('master','tempdb','model','msdb')
	</select>

	<select id="getNodeCount" parameterType="map" resultType="Integer">
		select
		 count(*) from ${schema}.sys.tables where name='node'
	</select>

	<select id="getNodeNameTree" parameterType="map" resultMap="BaseResultMap">
		declare @idNode int
		declare @fatherNode int
		declare @nodeName nvarchar(1000)
		declare @nodeNameString nvarchar(4000)
		declare	@bottomElement int
		set @idNode=${idNode}
		set @bottomElement = @idNode
		select @nodeName=NodeName,@fatherNode = IDParent from ${schema}.dbo.Node where	IDNode=@idNode 
		set @idNode = @fatherNode 
		set	@nodeNameString = @nodeName
		while @fatherNode>0
		begin
		select	@nodeName=NodeName,@fatherNode = IDParent from ${schema}.dbo.Node where	IDNode=@idNode
		set @idNode = @fatherNode
		set @nodeNameString = @nodeName+'-'+@nodeNameString
		end
		select @nodeNameString	treeString, @bottomElement bottomId
	</select>
	
	<select id="getNodeValue" parameterType="map" resultType="Float">
		select Amp
		from ${schema}.dbo.TrendSingle
		where IDPoint = #{idNode,jdbcType=INTEGER}
		AND ReadingTime = (select max(ReadingTime) from ${schema}.dbo.TrendSingle
		where IDPoint = #{idNode,jdbcType=INTEGER})
	</select>
	
	
</mapper>