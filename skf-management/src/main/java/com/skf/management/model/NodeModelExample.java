package com.skf.management.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class NodeModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public NodeModelExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNodeIDIsNull() {
            addCriterion("IDNode is null");
            return (Criteria) this;
        }

        public Criteria andNodeIDIsNotNull() {
            addCriterion("IDNode is not null");
            return (Criteria) this;
        }

        public Criteria andNodeIDEqualTo(Integer value) {
            addCriterion("IDNode =", value, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeIDNotEqualTo(Integer value) {
            addCriterion("IDNode <>", value, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeIDGreaterThan(Integer value) {
            addCriterion("IDNode >", value, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDNode >=", value, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeIDLessThan(Integer value) {
            addCriterion("IDNode <", value, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeIDLessThanOrEqualTo(Integer value) {
            addCriterion("IDNode <=", value, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeIDIn(List<Integer> values) {
            addCriterion("IDNode in", values, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeIDNotIn(List<Integer> values) {
            addCriterion("IDNode not in", values, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeIDBetween(Integer value1, Integer value2) {
            addCriterion("IDNode between", value1, value2, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeIDNotBetween(Integer value1, Integer value2) {
            addCriterion("IDNode not between", value1, value2, "nodeID");
            return (Criteria) this;
        }

        public Criteria andNodeParentIsNull() {
            addCriterion("IDParent is null");
            return (Criteria) this;
        }

        public Criteria andNodeParentIsNotNull() {
            addCriterion("IDParent is not null");
            return (Criteria) this;
        }

        public Criteria andNodeParentEqualTo(Integer value) {
            addCriterion("IDParent =", value, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andNodeParentNotEqualTo(Integer value) {
            addCriterion("IDParent <>", value, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andNodeParentGreaterThan(Integer value) {
            addCriterion("IDParent >", value, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andNodeParentGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDParent >=", value, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andNodeParentLessThan(Integer value) {
            addCriterion("IDParent <", value, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andNodeParentLessThanOrEqualTo(Integer value) {
            addCriterion("IDParent <=", value, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andNodeParentIn(List<Integer> values) {
            addCriterion("IDParent in", values, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andNodeParentNotIn(List<Integer> values) {
            addCriterion("IDParent not in", values, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andNodeParentBetween(Integer value1, Integer value2) {
            addCriterion("IDParent between", value1, value2, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andNodeParentNotBetween(Integer value1, Integer value2) {
            addCriterion("IDParent not between", value1, value2, "nodeParent");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeIsNull() {
            addCriterion("IDRefNode is null");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeIsNotNull() {
            addCriterion("IDRefNode is not null");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeEqualTo(Integer value) {
            addCriterion("IDRefNode =", value, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeNotEqualTo(Integer value) {
            addCriterion("IDRefNode <>", value, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeGreaterThan(Integer value) {
            addCriterion("IDRefNode >", value, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDRefNode >=", value, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeLessThan(Integer value) {
            addCriterion("IDRefNode <", value, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeLessThanOrEqualTo(Integer value) {
            addCriterion("IDRefNode <=", value, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeIn(List<Integer> values) {
            addCriterion("IDRefNode in", values, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeNotIn(List<Integer> values) {
            addCriterion("IDRefNode not in", values, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeBetween(Integer value1, Integer value2) {
            addCriterion("IDRefNode between", value1, value2, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andIdrefnodeNotBetween(Integer value1, Integer value2) {
            addCriterion("IDRefNode not between", value1, value2, "idrefnode");
            return (Criteria) this;
        }

        public Criteria andTreetypeIsNull() {
            addCriterion("TreeType is null");
            return (Criteria) this;
        }

        public Criteria andTreetypeIsNotNull() {
            addCriterion("TreeType is not null");
            return (Criteria) this;
        }

        public Criteria andTreetypeEqualTo(Short value) {
            addCriterion("TreeType =", value, "treetype");
            return (Criteria) this;
        }

        public Criteria andTreetypeNotEqualTo(Short value) {
            addCriterion("TreeType <>", value, "treetype");
            return (Criteria) this;
        }

        public Criteria andTreetypeGreaterThan(Short value) {
            addCriterion("TreeType >", value, "treetype");
            return (Criteria) this;
        }

        public Criteria andTreetypeGreaterThanOrEqualTo(Short value) {
            addCriterion("TreeType >=", value, "treetype");
            return (Criteria) this;
        }

        public Criteria andTreetypeLessThan(Short value) {
            addCriterion("TreeType <", value, "treetype");
            return (Criteria) this;
        }

        public Criteria andTreetypeLessThanOrEqualTo(Short value) {
            addCriterion("TreeType <=", value, "treetype");
            return (Criteria) this;
        }

        public Criteria andTreetypeIn(List<Short> values) {
            addCriterion("TreeType in", values, "treetype");
            return (Criteria) this;
        }

        public Criteria andTreetypeNotIn(List<Short> values) {
            addCriterion("TreeType not in", values, "treetype");
            return (Criteria) this;
        }

        public Criteria andTreetypeBetween(Short value1, Short value2) {
            addCriterion("TreeType between", value1, value2, "treetype");
            return (Criteria) this;
        }

        public Criteria andTreetypeNotBetween(Short value1, Short value2) {
            addCriterion("TreeType not between", value1, value2, "treetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeIsNull() {
            addCriterion("NodeType is null");
            return (Criteria) this;
        }

        public Criteria andNodetypeIsNotNull() {
            addCriterion("NodeType is not null");
            return (Criteria) this;
        }

        public Criteria andNodetypeEqualTo(Short value) {
            addCriterion("NodeType =", value, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeNotEqualTo(Short value) {
            addCriterion("NodeType <>", value, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeGreaterThan(Short value) {
            addCriterion("NodeType >", value, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeGreaterThanOrEqualTo(Short value) {
            addCriterion("NodeType >=", value, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeLessThan(Short value) {
            addCriterion("NodeType <", value, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeLessThanOrEqualTo(Short value) {
            addCriterion("NodeType <=", value, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeIn(List<Short> values) {
            addCriterion("NodeType in", values, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeNotIn(List<Short> values) {
            addCriterion("NodeType not in", values, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeBetween(Short value1, Short value2) {
            addCriterion("NodeType between", value1, value2, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodetypeNotBetween(Short value1, Short value2) {
            addCriterion("NodeType not between", value1, value2, "nodetype");
            return (Criteria) this;
        }

        public Criteria andNodestatusIsNull() {
            addCriterion("NodeStatus is null");
            return (Criteria) this;
        }

        public Criteria andNodestatusIsNotNull() {
            addCriterion("NodeStatus is not null");
            return (Criteria) this;
        }

        public Criteria andNodestatusEqualTo(Integer value) {
            addCriterion("NodeStatus =", value, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andNodestatusNotEqualTo(Integer value) {
            addCriterion("NodeStatus <>", value, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andNodestatusGreaterThan(Integer value) {
            addCriterion("NodeStatus >", value, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andNodestatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("NodeStatus >=", value, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andNodestatusLessThan(Integer value) {
            addCriterion("NodeStatus <", value, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andNodestatusLessThanOrEqualTo(Integer value) {
            addCriterion("NodeStatus <=", value, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andNodestatusIn(List<Integer> values) {
            addCriterion("NodeStatus in", values, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andNodestatusNotIn(List<Integer> values) {
            addCriterion("NodeStatus not in", values, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andNodestatusBetween(Integer value1, Integer value2) {
            addCriterion("NodeStatus between", value1, value2, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andNodestatusNotBetween(Integer value1, Integer value2) {
            addCriterion("NodeStatus not between", value1, value2, "nodestatus");
            return (Criteria) this;
        }

        public Criteria andSortorderidIsNull() {
            addCriterion("SortOrderId is null");
            return (Criteria) this;
        }

        public Criteria andSortorderidIsNotNull() {
            addCriterion("SortOrderId is not null");
            return (Criteria) this;
        }

        public Criteria andSortorderidEqualTo(Integer value) {
            addCriterion("SortOrderId =", value, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andSortorderidNotEqualTo(Integer value) {
            addCriterion("SortOrderId <>", value, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andSortorderidGreaterThan(Integer value) {
            addCriterion("SortOrderId >", value, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andSortorderidGreaterThanOrEqualTo(Integer value) {
            addCriterion("SortOrderId >=", value, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andSortorderidLessThan(Integer value) {
            addCriterion("SortOrderId <", value, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andSortorderidLessThanOrEqualTo(Integer value) {
            addCriterion("SortOrderId <=", value, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andSortorderidIn(List<Integer> values) {
            addCriterion("SortOrderId in", values, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andSortorderidNotIn(List<Integer> values) {
            addCriterion("SortOrderId not in", values, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andSortorderidBetween(Integer value1, Integer value2) {
            addCriterion("SortOrderId between", value1, value2, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andSortorderidNotBetween(Integer value1, Integer value2) {
            addCriterion("SortOrderId not between", value1, value2, "sortorderid");
            return (Criteria) this;
        }

        public Criteria andNodeactiveIsNull() {
            addCriterion("NodeActive is null");
            return (Criteria) this;
        }

        public Criteria andNodeactiveIsNotNull() {
            addCriterion("NodeActive is not null");
            return (Criteria) this;
        }

        public Criteria andNodeactiveEqualTo(Byte value) {
            addCriterion("NodeActive =", value, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andNodeactiveNotEqualTo(Byte value) {
            addCriterion("NodeActive <>", value, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andNodeactiveGreaterThan(Byte value) {
            addCriterion("NodeActive >", value, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andNodeactiveGreaterThanOrEqualTo(Byte value) {
            addCriterion("NodeActive >=", value, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andNodeactiveLessThan(Byte value) {
            addCriterion("NodeActive <", value, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andNodeactiveLessThanOrEqualTo(Byte value) {
            addCriterion("NodeActive <=", value, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andNodeactiveIn(List<Byte> values) {
            addCriterion("NodeActive in", values, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andNodeactiveNotIn(List<Byte> values) {
            addCriterion("NodeActive not in", values, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andNodeactiveBetween(Byte value1, Byte value2) {
            addCriterion("NodeActive between", value1, value2, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andNodeactiveNotBetween(Byte value1, Byte value2) {
            addCriterion("NodeActive not between", value1, value2, "nodeactive");
            return (Criteria) this;
        }

        public Criteria andLastupdatedIsNull() {
            addCriterion("LastUpdated is null");
            return (Criteria) this;
        }

        public Criteria andLastupdatedIsNotNull() {
            addCriterion("LastUpdated is not null");
            return (Criteria) this;
        }

        public Criteria andLastupdatedEqualTo(Date value) {
            addCriterion("LastUpdated =", value, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andLastupdatedNotEqualTo(Date value) {
            addCriterion("LastUpdated <>", value, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andLastupdatedGreaterThan(Date value) {
            addCriterion("LastUpdated >", value, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andLastupdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("LastUpdated >=", value, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andLastupdatedLessThan(Date value) {
            addCriterion("LastUpdated <", value, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andLastupdatedLessThanOrEqualTo(Date value) {
            addCriterion("LastUpdated <=", value, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andLastupdatedIn(List<Date> values) {
            addCriterion("LastUpdated in", values, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andLastupdatedNotIn(List<Date> values) {
            addCriterion("LastUpdated not in", values, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andLastupdatedBetween(Date value1, Date value2) {
            addCriterion("LastUpdated between", value1, value2, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andLastupdatedNotBetween(Date value1, Date value2) {
            addCriterion("LastUpdated not between", value1, value2, "lastupdated");
            return (Criteria) this;
        }

        public Criteria andStatuschangedIsNull() {
            addCriterion("StatusChanged is null");
            return (Criteria) this;
        }

        public Criteria andStatuschangedIsNotNull() {
            addCriterion("StatusChanged is not null");
            return (Criteria) this;
        }

        public Criteria andStatuschangedEqualTo(Date value) {
            addCriterion("StatusChanged =", value, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andStatuschangedNotEqualTo(Date value) {
            addCriterion("StatusChanged <>", value, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andStatuschangedGreaterThan(Date value) {
            addCriterion("StatusChanged >", value, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andStatuschangedGreaterThanOrEqualTo(Date value) {
            addCriterion("StatusChanged >=", value, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andStatuschangedLessThan(Date value) {
            addCriterion("StatusChanged <", value, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andStatuschangedLessThanOrEqualTo(Date value) {
            addCriterion("StatusChanged <=", value, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andStatuschangedIn(List<Date> values) {
            addCriterion("StatusChanged in", values, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andStatuschangedNotIn(List<Date> values) {
            addCriterion("StatusChanged not in", values, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andStatuschangedBetween(Date value1, Date value2) {
            addCriterion("StatusChanged between", value1, value2, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andStatuschangedNotBetween(Date value1, Date value2) {
            addCriterion("StatusChanged not between", value1, value2, "statuschanged");
            return (Criteria) this;
        }

        public Criteria andNodetagIsNull() {
            addCriterion("NodeTag is null");
            return (Criteria) this;
        }

        public Criteria andNodetagIsNotNull() {
            addCriterion("NodeTag is not null");
            return (Criteria) this;
        }

        public Criteria andNodetagEqualTo(Integer value) {
            addCriterion("NodeTag =", value, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodetagNotEqualTo(Integer value) {
            addCriterion("NodeTag <>", value, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodetagGreaterThan(Integer value) {
            addCriterion("NodeTag >", value, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodetagGreaterThanOrEqualTo(Integer value) {
            addCriterion("NodeTag >=", value, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodetagLessThan(Integer value) {
            addCriterion("NodeTag <", value, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodetagLessThanOrEqualTo(Integer value) {
            addCriterion("NodeTag <=", value, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodetagIn(List<Integer> values) {
            addCriterion("NodeTag in", values, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodetagNotIn(List<Integer> values) {
            addCriterion("NodeTag not in", values, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodetagBetween(Integer value1, Integer value2) {
            addCriterion("NodeTag between", value1, value2, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodetagNotBetween(Integer value1, Integer value2) {
            addCriterion("NodeTag not between", value1, value2, "nodetag");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockIsNull() {
            addCriterion("NodeConfigurationLock is null");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockIsNotNull() {
            addCriterion("NodeConfigurationLock is not null");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockEqualTo(Byte value) {
            addCriterion("NodeConfigurationLock =", value, "nodeconfigurationlock");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockNotEqualTo(Byte value) {
            addCriterion("NodeConfigurationLock <>", value, "nodeconfigurationlock");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockGreaterThan(Byte value) {
            addCriterion("NodeConfigurationLock >", value, "nodeconfigurationlock");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockGreaterThanOrEqualTo(Byte value) {
            addCriterion("NodeConfigurationLock >=", value, "nodeconfigurationlock");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockLessThan(Byte value) {
            addCriterion("NodeConfigurationLock <", value, "nodeconfigurationlock");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockLessThanOrEqualTo(Byte value) {
            addCriterion("NodeConfigurationLock <=", value, "nodeconfigurationlock");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockIn(List<Byte> values) {
            addCriterion("NodeConfigurationLock in", values, "nodeconfigurationlock");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockNotIn(List<Byte> values) {
            addCriterion("NodeConfigurationLock not in", values, "nodeconfigurationlock");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockBetween(Byte value1, Byte value2) {
            addCriterion("NodeConfigurationLock between", value1, value2, "nodeconfigurationlock");
            return (Criteria) this;
        }

        public Criteria andNodeconfigurationlockNotBetween(Byte value1, Byte value2) {
            addCriterion("NodeConfigurationLock not between", value1, value2, "nodeconfigurationlock");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.Node
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 05 10:28:23 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.Node
     *
     * @mbg.generated Tue Jun 05 10:28:23 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}