package com.skf.management.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ScoreModelExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public ScoreModelExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCodeIsNull() {
			addCriterion("CMPT_CODE is null");
			return (Criteria) this;
		}

		public Criteria andCodeIsNotNull() {
			addCriterion("CMPT_CODE is not null");
			return (Criteria) this;
		}

		public Criteria andCodeEqualTo(String value) {
			addCriterion("CMPT_CODE =", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotEqualTo(String value) {
			addCriterion("CMPT_CODE <>", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThan(String value) {
			addCriterion("CMPT_CODE >", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThanOrEqualTo(String value) {
			addCriterion("CMPT_CODE >=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThan(String value) {
			addCriterion("CMPT_CODE <", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThanOrEqualTo(String value) {
			addCriterion("CMPT_CODE <=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLike(String value) {
			addCriterion("CMPT_CODE like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotLike(String value) {
			addCriterion("CMPT_CODE not like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeIn(List<String> values) {
			addCriterion("CMPT_CODE in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotIn(List<String> values) {
			addCriterion("CMPT_CODE not in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeBetween(String value1, String value2) {
			addCriterion("CMPT_CODE between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotBetween(String value1, String value2) {
			addCriterion("CMPT_CODE not between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andTimeIsNull() {
			addCriterion("TIME is null");
			return (Criteria) this;
		}

		public Criteria andTimeIsNotNull() {
			addCriterion("TIME is not null");
			return (Criteria) this;
		}

		public Criteria andTimeEqualTo(Date value) {
			addCriterion("TIME =", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotEqualTo(Date value) {
			addCriterion("TIME <>", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThan(Date value) {
			addCriterion("TIME >", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("TIME >=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThan(Date value) {
			addCriterion("TIME <", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThanOrEqualTo(Date value) {
			addCriterion("TIME <=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeIn(List<Date> values) {
			addCriterion("TIME in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotIn(List<Date> values) {
			addCriterion("TIME not in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeBetween(Date value1, Date value2) {
			addCriterion("TIME between", value1, value2, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotBetween(Date value1, Date value2) {
			addCriterion("TIME not between", value1, value2, "time");
			return (Criteria) this;
		}

		public Criteria andCalssIsNull() {
			addCriterion("CALSS is null");
			return (Criteria) this;
		}

		public Criteria andCalssIsNotNull() {
			addCriterion("CALSS is not null");
			return (Criteria) this;
		}

		public Criteria andCalssEqualTo(String value) {
			addCriterion("CALSS =", value, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssNotEqualTo(String value) {
			addCriterion("CALSS <>", value, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssGreaterThan(String value) {
			addCriterion("CALSS >", value, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssGreaterThanOrEqualTo(String value) {
			addCriterion("CALSS >=", value, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssLessThan(String value) {
			addCriterion("CALSS <", value, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssLessThanOrEqualTo(String value) {
			addCriterion("CALSS <=", value, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssLike(String value) {
			addCriterion("CALSS like", value, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssNotLike(String value) {
			addCriterion("CALSS not like", value, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssIn(List<String> values) {
			addCriterion("CALSS in", values, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssNotIn(List<String> values) {
			addCriterion("CALSS not in", values, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssBetween(String value1, String value2) {
			addCriterion("CALSS between", value1, value2, "calss");
			return (Criteria) this;
		}

		public Criteria andCalssNotBetween(String value1, String value2) {
			addCriterion("CALSS not between", value1, value2, "calss");
			return (Criteria) this;
		}

		public Criteria andScoreIsNull() {
			addCriterion("SCORE is null");
			return (Criteria) this;
		}

		public Criteria andScoreIsNotNull() {
			addCriterion("SCORE is not null");
			return (Criteria) this;
		}

		public Criteria andScoreEqualTo(Float value) {
			addCriterion("SCORE =", value, "score");
			return (Criteria) this;
		}

		public Criteria andScoreNotEqualTo(Float value) {
			addCriterion("SCORE <>", value, "score");
			return (Criteria) this;
		}

		public Criteria andScoreGreaterThan(Float value) {
			addCriterion("SCORE >", value, "score");
			return (Criteria) this;
		}

		public Criteria andScoreGreaterThanOrEqualTo(Float value) {
			addCriterion("SCORE >=", value, "score");
			return (Criteria) this;
		}

		public Criteria andScoreLessThan(Float value) {
			addCriterion("SCORE <", value, "score");
			return (Criteria) this;
		}

		public Criteria andScoreLessThanOrEqualTo(Float value) {
			addCriterion("SCORE <=", value, "score");
			return (Criteria) this;
		}

		public Criteria andScoreIn(List<Float> values) {
			addCriterion("SCORE in", values, "score");
			return (Criteria) this;
		}

		public Criteria andScoreNotIn(List<Float> values) {
			addCriterion("SCORE not in", values, "score");
			return (Criteria) this;
		}

		public Criteria andScoreBetween(Float value1, Float value2) {
			addCriterion("SCORE between", value1, value2, "score");
			return (Criteria) this;
		}

		public Criteria andScoreNotBetween(Float value1, Float value2) {
			addCriterion("SCORE not between", value1, value2, "score");
			return (Criteria) this;
		}

		public Criteria andTotalValueIsNull() {
			addCriterion("TOTAL_VALUE is null");
			return (Criteria) this;
		}

		public Criteria andTotalValueIsNotNull() {
			addCriterion("TOTAL_VALUE is not null");
			return (Criteria) this;
		}

		public Criteria andTotalValueEqualTo(Float value) {
			addCriterion("TOTAL_VALUE =", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueNotEqualTo(Float value) {
			addCriterion("TOTAL_VALUE <>", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueGreaterThan(Float value) {
			addCriterion("TOTAL_VALUE >", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueGreaterThanOrEqualTo(Float value) {
			addCriterion("TOTAL_VALUE >=", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueLessThan(Float value) {
			addCriterion("TOTAL_VALUE <", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueLessThanOrEqualTo(Float value) {
			addCriterion("TOTAL_VALUE <=", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueIn(List<Float> values) {
			addCriterion("TOTAL_VALUE in", values, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueNotIn(List<Float> values) {
			addCriterion("TOTAL_VALUE not in", values, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueBetween(Float value1, Float value2) {
			addCriterion("TOTAL_VALUE between", value1, value2, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueNotBetween(Float value1, Float value2) {
			addCriterion("TOTAL_VALUE not between", value1, value2, "totalValue");
			return (Criteria) this;
		}

		public Criteria andDangerLevelIsNull() {
			addCriterion("DANGER_LEVEL is null");
			return (Criteria) this;
		}

		public Criteria andDangerLevelIsNotNull() {
			addCriterion("DANGER_LEVEL is not null");
			return (Criteria) this;
		}

		public Criteria andDangerLevelEqualTo(Float value) {
			addCriterion("DANGER_LEVEL =", value, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andDangerLevelNotEqualTo(Float value) {
			addCriterion("DANGER_LEVEL <>", value, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andDangerLevelGreaterThan(Float value) {
			addCriterion("DANGER_LEVEL >", value, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andDangerLevelGreaterThanOrEqualTo(Float value) {
			addCriterion("DANGER_LEVEL >=", value, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andDangerLevelLessThan(Float value) {
			addCriterion("DANGER_LEVEL <", value, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andDangerLevelLessThanOrEqualTo(Float value) {
			addCriterion("DANGER_LEVEL <=", value, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andDangerLevelIn(List<Float> values) {
			addCriterion("DANGER_LEVEL in", values, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andDangerLevelNotIn(List<Float> values) {
			addCriterion("DANGER_LEVEL not in", values, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andDangerLevelBetween(Float value1, Float value2) {
			addCriterion("DANGER_LEVEL between", value1, value2, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andDangerLevelNotBetween(Float value1, Float value2) {
			addCriterion("DANGER_LEVEL not between", value1, value2, "dangerLevel");
			return (Criteria) this;
		}

		public Criteria andBpTypeIsNull() {
			addCriterion("BP_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andBpTypeIsNotNull() {
			addCriterion("BP_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andBpTypeEqualTo(String value) {
			addCriterion("BP_TYPE =", value, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeNotEqualTo(String value) {
			addCriterion("BP_TYPE <>", value, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeGreaterThan(String value) {
			addCriterion("BP_TYPE >", value, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeGreaterThanOrEqualTo(String value) {
			addCriterion("BP_TYPE >=", value, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeLessThan(String value) {
			addCriterion("BP_TYPE <", value, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeLessThanOrEqualTo(String value) {
			addCriterion("BP_TYPE <=", value, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeLike(String value) {
			addCriterion("BP_TYPE like", value, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeNotLike(String value) {
			addCriterion("BP_TYPE not like", value, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeIn(List<String> values) {
			addCriterion("BP_TYPE in", values, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeNotIn(List<String> values) {
			addCriterion("BP_TYPE not in", values, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeBetween(String value1, String value2) {
			addCriterion("BP_TYPE between", value1, value2, "bpType");
			return (Criteria) this;
		}

		public Criteria andBpTypeNotBetween(String value1, String value2) {
			addCriterion("BP_TYPE not between", value1, value2, "bpType");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table SKF_CMPT_SCORE
	 * @mbg.generated  Fri Jun 15 18:04:35 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SKF_CMPT_SCORE
     *
     * @mbg.generated do_not_delete_during_merge Fri Jun 08 15:02:18 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}